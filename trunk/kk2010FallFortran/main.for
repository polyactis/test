C
C     MAIN APPLIES APPROXIMATION FACTORISATION TO SOLVE
C     THE STEADY FLOW PROBLEM  FOR U(X,Y) AND V(X,Y) .
C     
C
      REAL*8 SUMU,RMSU,DSQRT,AN,SUMQ,RMSQ
      DIMENSION U(41,41),DU(41,41),V(41,41),DV(41,41),P(41,41),D(41,41)			  
      DIMENSION FU(41,41),FV(41,41),FUP(41,41),FVP(41,41),EMX(3),EMY(3)
	DIMENSION JPVT(1600),DVE(1600),AJ(1600,1600),R(41,41)
	DIMENSION ERRU(41),UE(41),Q(41),ERRQ(41),QE(41),Y(41)
	DIMENSION RRU(41),RRV(41),DDU(41),DDV(41),B(5,41)
      COMMON DX,DY,NX,NY,R,U,DU,V,DV,P,FU,FV,FUP,FVP,ALF,CCXA,CCYA,DVE
      OPEN(1,FILE='main.dat')
      OPEN(6,FILE='main.out')
      READ(1,1)NX,NY,XMAX
      READ(1,2)RE,DTIM,DTMCH,TMAX
    1 FORMAT(2I5,1F5.2)
    2 FORMAT(4E10.3)
C
      NXS = NX + 1
      NYS = NY + 1
      NXP = NX - 1
      NYP = NY - 1
  	NXY = NX*NY

      ANX = NXP
      DX = 1.*XMAX/ANX
      ANY = NYP
      DY = 2./ANY

	AN = NY - 2

	EMX(1)=0.
	EMX(2)=1.
	EMX(3)=0.

	DO 3 J=1,2
    	EMY(J)=EMX(J)
    3	CONTINUE

	DO 4 K=1,NY
	AK = K-1
   	Y(K) = -1. + AK*DY
    4	CONTINUE

      ALF=1./RE

      WRITE(6,5)NX,NY,XMAX
    5 FORMAT(' STEADY FLOW WITH NX,NY =',2I5,/,
     1' XMAX =',1F5.2)
	WRITE(6,6)EMX
    6	FORMAT(' APPROX. FACT., FDM, EMX=', 3E10.3)

      WRITE(6,7)RE,DTIM,DTMCH,TMAX
    7 FORMAT('RE = ',E10.3,' DTIM =',E10.3,' PRINT INT. =',E10.3,
     1' TMAX =',E10.3,//)
C
C     GENERATE INITIAL SOLUTION
C
      DO 9 J=1,NX
	KM = (NY+1)/2
	JM = J - 1
      U(KM,J) = 1.+ (1.5-1.0)*JM/NXP
	DO 8 K=1,(NY-1)/2
	KN=NY+1-K
	U(K,J) = 1.*(K-1)*U(KM,J)/((NY-1)/2) 
	U(KN,J) = 1.*(K-1)*U(KM,J)/((NY-1)/2)
    8	CONTINUE
    9	CONTINUE
	     
      DO 11 J = 1,NX
 	V(1,J) = 0.
	V(NY,J) = 0.
	Q(J) = 0.
      DO 10 K = 1,NY
	FU(K,J) = 3./RE
 	FV(K,J) = 0.
	FUP(K,J) = 3./RE
  	FVP(K,J) = 0.
      V(K,J) = 0.
   10 CONTINUE
   11 CONTINUE

C	WRITE(6,60) (U((NY+1)/2,J),J=1,NX)
C   60	FORMAT('INITIAL U AT CENTERLINE=',31E11.4)

C	WRITE(6,61) (U(K,NX),K=1,NY)
C   61	FORMAT('INITIAL U AT OUTFLOW=',21E11.4)

      DO 12 K = 1,NYS
   12 U(K,NXS) = U(K,NXP)

      TIM = 0.
      TMCH = -0.00001 + DTMCH
	IM=0
   13	CCXA = 0.5*DTIM*ALF/DX/DX
	CCYA = 0.5*DTIM*ALF/DY/DY
	IM=IM+1
C     CONVEC STEP
C	COMPUTE FU and FV
	DO 15 J=1,NX
      DO 14 K=1,NY
	FUP(K,J) = FU(K,J)
	FVP(K,J) = FV(K,J)
   14	CONTINUE
   15	CONTINUE

C      CALL CONVEC(RE,U,V)
	DO 115 J =2,NXP
	DO 114 K = 2,NYP
	FU(K,J) = 3./RE - U(K,J)*(U(K,J+1)-U(K,J-1))/(2.*DX)
	FU(K,J) = FU(K,J) - V(K,J)*(U(K+1,J)-U(K-1,J))/(2.*DY)
	FV(K,J) = 0. - U(K,J)*(V(K,J+1)-V(K,J-1))/(2.*DX)
	FV(K,J)=FV(K,J) - V(K,J)*(V(K+1,J)-V(K-1,J))/(2.*DY)
  114	CONTINUE
  115 CONTINUE

	DO 116 K =2,NYP
	FU(K,NX) = 3./RE - U(K,NX)*(U(K,NXS)-U(K,NXP))/(2.*DX)
  116	CONTINUE


C	WRITE(6,64) (FU(11,J),J=1,NX)
C   64	FORMAT('AT CENTERLINE FU=', 31E11.4)

C	WRITE(6,65) (FV(11,J),J=1,NX)
C   65	FORMAT('AT CENTERLINE FV=', 31E11.4)


C
	DO 17 J = 2,NXP
     	DO 16 K = 2,NYP
C	FOR THE 1ST TIME STEP
	DU(K,J) = FU(K,J)*DTIM
	DV(K,J) = FV(K,J)*DTIM

C	AFTER THE 1ST TIME STEP 
	IF(IM .NE. 1.) THEN
	DU(K,J) = (1.5*FU(K,J) - 0.5*FUP(K,J))*DTIM
   	DV(K,J) = (1.5*FV(K,J) - 0.5*FVP(K,J))*DTIM
	END IF
   	U(K,J) = U(K,J) + DU(K,J)
   16	V(K,J) = V(K,J) + DV(K,J)
   17	CONTINUE


C	U PROFILE ON RIGHT BOUNDARY
	DO 18 K =2,NYP
      IF(TIM .EQ. 0.) THEN
   	DU(K,NX) = FU(K,NX)*DTIM
   	END IF
   	DU(K,NX) = (1.5*FU(K,NX) - 0.5*FUP(K,NX))*DTIM
   18	U(K,NX) = U(K,NX) + DU(K,NX)

C	WRITE(6,70)	(U((NY+1)/2,J),J=1,NX)
C   70 FORMAT('U AT CENTERLINE AFTER CONVECT STEP', 31E11.4)

C	WRITE(6,75) (U(K,NX),K=1,NY)
C   75	FORMAT('U AT OUTFLOW', 21E11.4)

C	PRESSURE STEP 
	
C     COMPUTE D(K,J)
	DO 20 K=1,NY
	DO 19 J=1,NX
	D(K,J) = 0.
   19	CONTINUE
   20 CONTINUE
     
      DO 22 K=2,NY
	DO 21 J=2,NX 
	D(K,J) = (U(K,J) - U(K,J-1))/DX
   	D(K,J) = D(K,J) + (V(K,J) - V(K-1,J))/DY
   21	D(K,J) = -1.*D(K,J)/DTIM
   22	CONTINUE

	DO 23 J=1,NX
   	D(1,J) = 0.
   23	D(NY,J) =0.
   
   	DO 24 K=1,NY
	D(K,1) = 0.
   24	D(K,NX) =0.

	D(NY,NX) = 1.

C     EVALUATE COEFFICENT MATRIX OF PRESSURE EQUATION 
C	AND GET VECTOR FOR D(J,K)
	
      CALL PRESS(AJ)


	DO 224 J =1,NX*NY

	DVE(J) = 0.

  224	CONTINUE

	DO 226 J = 1,NX
	DO 225 K = 1,NY
	DVE((J-1)*NY+K) = D(K,J)
  225	CONTINUE
  226 CONTINUE

C	WRITE(6,68) (DVE(J),J=1,32)
C   68	FORMAT('DVE=', 32E11.4)

C	WRITE(6,63) (D(K,2),K=1,NY)
C   63	FORMAT('D(J=2,K)=',21E11.4)

C	WRITE(6,53)	(AJ(K,K),K=1,5)
C   53	FORMAT('AJ at DIAGONAL=', 5E11.4)

C	WRITE(6,55) (AJ(K,1),K=1,21)
C   55	FORMAT('AJ at 1st row=', 21E11.4)

C	WRITE(6,56) AJ(1,32),AJ(32,32),AJ(33,32),AJ(53,32)
C   56	FORMAT('AJ for P(2,1)=', 4E11.4)

C	WRITE(6,54) (AJ(K,651),K=646,651)
C   54	FORMAT('AJ at last row=', 6E11.4)


C	FACTORISE THE COEFFICIENT MATRIX INTO L.U.

      CALL FACT(NXY,AJ,JPVT)

C	WRITE(6,58) (AJ(K,2),K=1,21)
C   58	FORMAT('After FACT, AJ(K,2)=', 21E11.4)

C	WRITE(6,62) (JPVT(K),K=1,10)
C   62	FORMAT('JPVT=', 10I4)

	IF(JPVT(NXY) .EQ. -1) WRITE (6,25)
   25	FORMAT('ZERO PIVOT DETECTED')
	IF(JPVT(NXY) .EQ. -1) GOTO 52

C     SOLVE FOR THE PRESSURE
	
	CALL SOLVE(NXY,AJ,JPVT,DVE)

	DO 27 J=1,NX
	DO 26 K=1,NY
	M=(J-1)*NY + K
	P(K,J) = DVE(M)
   26	CONTINUE
   27	CONTINUE

	WRITE(6,67)	(P(K,1),K=1,21)
   67	FORMAT('P(K,1)=',21E11.4)

	WRITE(6,59)(P(K,2),K=1,NY)
   59	FORMAT('PRESSURE AT J=2',21E11.4)

	WRITE(6,74)(P(K,3),K=1,NY)
   74	FORMAT('PRESSURE AT J=3',21E11.4)

C	PRESSURE TIME DISCRETIZATION

	DO 29 K = 2,NYP
	DU(K,NX) = 0.
	DO 28 J = 2,NXP
	DU(K,J) = -1.*DTIM*(P(K,J+1)-P(K,J-1))/(2*DX)
	DV(K,J) = -1.*DTIM*(P(K+1,J)-P(K-1,J))/(2*DY)
	U(K,J) = U(K,J) + DU(K,J)
	V(K,J) = V(K,J) + DV(K,J)
   28 CONTINUE
   29	CONTINUE

C	WRITE(6,71)	(U((NY+1)/2,J),J=1,NX)
C   71 FORMAT('U AT CENTERLINE AFTER PRESS STEP', 31E11.4)

C	WRITE(6,72)	(DU((NY+1)/2,J),J=1,NX)
C   72	FORMAT('DU AT CENTERLINE AFTER PRESS STEP', 31E11.4)
	

C	VISCOUS STEP


C	CALL VISC(DTIM,ALF,NX,NY,U,V,CCXA,CCYA)
C     COMPUTE U
	NXN=NX
	NYN=NYP
	NXPP=NXN-1
	NYPP=NYN-1

	CALL REDIF(ALF, DTIM, NXN, NYN, U)
C
C	TRIDIAGONAL SYSTEM IN THE X-DIRECTION
C
	DO 321 K = 2,NYN 
	DO 319 J = 2,NXN
	JM = J - 1
	B(2,JM) = EMX(1) - CCXA
	B(3,JM) = EMX(2) + 2.*CCXA
	B(4,JM) = EMX(3) - CCXA
  319	RRU(JM) = R(K,J)
	B(2,1) = 0.
	DU(K,NXS) = DU(K,NXP)
	B(2,JM) =B(2,JM) +B(4,JM)
	B(4,JM) = 0.
C
	CALL BANFAC(B,NXPP,1)
	CALL BANSOL(RRU,DDU,B,NXPP,1)
C
	DO 320 J = 2,NXN
	JM = J - 1
  320	R(K,J) = DDU(JM)
  321 CONTINUE
C
C	TRIDIAGONAL SYSTEMS IN THE Y-DIRECTION
C
	DO 324 J = 2,NXN
	DO 322 K = 2,NYN
	KM = K - 1
	B(2,KM) = EMY(1) - CCYA
	B(3,KM) = EMY(2) + 2.*CCYA
	B(4,KM) = EMY(3) - CCYA
  322	RRU(KM) = R(K,J)
	B(2,1) = 0.
	DU(NY,J) = 0.
	B(4,KM) = 0.
C
	CALL BANFAC(B,NYPP,1)
	CALL BANSOL(RRU,DDU,B,NYPP,1)

	DO 323 K = 2, NYN
	KM = K-1
	DU(K,J) = DDU(KM)
  323	U(K,J) = U(K,J) +DDU(KM)
  324	CONTINUE

C
C	COMPUTE V
C
	NXN=NXP
	NYN=NYP
	NXPP=NXN-1
	NYPP=NYN-1

	CALL REDIF(ALF, DTIM, NXN, NYN, V)

C
C	TRIDIAGONAL SYSTEMS IN THE X-DIRECTION
C
	DO 327 K = 2,NYN
	DO 325 J = 2,NXN
	JM = J - 1
	B(2,JM) = EMX(1) - CCXA
	B(3,JM) = EMX(2) + 2.*CCXA
	B(4,JM) = EMX(3) - CCXA
  325	RRV(JM) = R(K,J)
	B(2,1) = 0.
	DV(K,NX) = 0.
	B(4,JM) = 0.
C
	CALL BANFAC(B,NXPP,1)
	CALL BANSOL(RRV,DDV,B,NXPP,1)
C	
	DO 326 J = 2,NXN
	JM = J - 1
  326	R(K,J) = DDV(JM)
  327 CONTINUE

C
C	TRIDIAGONAL SYSTEMS IN THE Y-DIRECTION
C
	DO 330 J = 2,NXN
	DO 328 K = 2,NYN
	KM = K - 1
	B(2,KM) = EMY(1) - CCYA
	B(3,KM) = EMY(2) + 2.*CCYA
	B(4,KM) = EMY(3) - CCYA
  328	RRV(KM) = R(K,J)
	B(2,1) = 0.
	DV(NY,J) = 0.
	B(4,KM) = 0.
C
	CALL BANFAC(B,NYPP,1)
	CALL BANSOL(RRV,DDV,B,NYPP,1)

	DO 329 K = 2, NYN
	KM = K - 1
	DV(K,J) = DDV(KM)
  329	V(K,J) = V(K,J) + DDV(KM)
  330	CONTINUE

C	WRITE(6,73)	(DU((NY+1)/2,J),J=1,NX)
C   73	FORMAT('DU AT CENTERLINE AFTER VISC STEP', 31E11.4)

C
C     INCREMENT T
C
      DU(NY,NXS) = DU(NY,NXP)
	DV(NY,NX) = 0.
      TIM = TIM + DTIM
      
	DO 30 K = 1, NY
   30	U(K,NXS) = U(K,NXP)

      IF(TIM .GE. TMCH)GOTO 31
      IF(TIM .LE. TMAX)GOTO 13
      GOTO 52
C
C     COMPARE WITH EXACT SOLUTION
C
   31 TMCH = TMCH + DTMCH
      SUMU = 0.
	SUMQ = 0.

	DO 32 K=1,NY
   	UE(K) = 1.5*(1.-Y(K)*Y(K)) 
	ERRU(K) = UE(K) - U(K,NX)
   	SUMU = SUMU + ERRU(K)**2
   32	CONTINUE

	RMSU = DSQRT(SUMU/AN) 


C	PRINT VERTICAL PROFILES OF VELOCITY U AND V
C	AT J=2, (NX+1)/2, NX-1 AND NX 
C	AND ALSO THE EXACT SOLUTION OF U AT OUTFLOW

	J = 2
	WRITE(6,33) (U(K,J), K=1,NY)
   33	FORMAT('AT J=2, U=', 21F10.6)
	WRITE(6,34) (V(K,J), K=1,NY)
   34	FORMAT('AT J=2, V=', 21F10.6)
      
	J=(NX+1)/2
	WRITE(6,35) (U(K,J), K=1,NY)
   35	FORMAT('AT J=(NX+1)/2, U=', 21F10.6)
	WRITE(6,36) (V(K,J), K=1,NY)
   36	FORMAT('AT J=(NX+1)/2, V=', 21F10.6)
     
	J=NX-1
	WRITE(6,37) (U(K,J), K=1,NY)
   37 FORMAT('AT J=NX-1, U=', 21F10.6)
	WRITE(6,38) (V(K,J), K=1,NY)
   38	FORMAT('AT J=NX-1, V=', 21F10.6)

     	WRITE(6,39) (U(K,NX), K=1,NY)
   39 FORMAT('AT OUTFLOW J=NX, U=', 21F10.6)
  	WRITE(6,40) (V(K,NX), K=1,NY)
   40	FORMAT('AT OUTFLOW J=NX, V=', 21F10.6)

	WRITE(6,41) (UE(K), K=1,NY)
   41 FORMAT('AT OUTFLOW UE=', 21F10.6)					

C	PRINT U ANF V ALONG CENTER LINE K=(NY+1)/2

	KM=(NY+1)/2
	WRITE(6,42) (U(KM,J), J=1,NX)
   42	FORMAT('AT CENTERLINE Y=0, U=', 31F10.6)
	WRITE(6,43) (V(KM,J), J=1,NX)
   43	FORMAT('AT CENTERLINE Y=0, V=', 31F10.6)

C	PRINT ERROR OF U AT OUTFLOW

	WRITE(6,44) (ERRU(K), K=1,NY)
   44	FORMAT('ERROR=', 21F7.3)
     
C	COMPUTE FLOW RATE Q(X)

	DO 46 J = 1, NX  
   	DO 45 K = 2, NYP
	Q(J) = Q(J) + U(K,J)*DY
   45	CONTINUE
	QE(J) = 2.
	ERRQ(J) = QE(J) - Q(J)
	SUMQ = SUMQ + ERRQ(J)
   46	CONTINUE

	RMSQ = DSQRT(SUMQ/NX)

C	PRINT RMS ERROR FOR THE U VELOCITY AT OUTFLOW
	WRITE(6,47)Q(NX),TIM,RMSU,RMSQ
   47	FORMAT('FLOW RATE=',E11.4,' TIME=',E11.4,' RMSU=',D11.4,
     1' RMSQ=',D11.4)

      IF(TIM .LE. TMAX)GOTO 13
   52 CONTINUE
      STOP
      END

